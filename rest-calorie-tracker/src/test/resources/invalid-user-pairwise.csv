NAME;LOGIN;PASSWORD;WEIGHT
   ;  ;   ;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
   ;EMPTY;EMPTY;0
   ;NULL;NULL;-0,01
   ;beer;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
   ;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;0
EMPTY;EMPTY;NULL;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
EMPTY;NULL;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;0
EMPTY;beer;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;0
EMPTY;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;   ;-0,01
EMPTY;  ;EMPTY;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
NULL;NULL;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;-0,01
NULL;beer;   ;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
NULL;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;EMPTY;0
NULL;  ;NULL;-0,01
NULL;EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
"к вот, сценарии использования и альтернативные сценарии, мы обычно получаем от аналитиков из спецификации.. таблицы, деревья и диаграммы мало кто чертит, так как это занимает много времени (при дефиците ресурсов). Как правило, в ходу две популярные техники: классы эквивалентности и граничные значения, и только отдельные умнички используют pairwise ( попарное тестирование ).   Скажу честно, принять эту технику я смог далеко не сразу. Я тогда еще не до конца преисполнился познанием и из-за непонимания было недоверие к, сгенерированным инструментом, кейсам.  Конечно, на собесах, у всех от зубов отскакивает: ""создаются все возможные отдельные комбинации каждой пары входных параметров"" или ""в 97 процентах случаев, баги находятся на комбинации двух параметров"", но давайте разберемся, почему pairwise сложно применить ручками и поймем как забить на это и успешно применять его в своей работе.  Попарное тестирование ручками Представим, что мы тестируем сайт, продающий блокноты. Пользователь может собрать блокнот сам, через форму, после заполнения которой видим изображение собранного блокнота. Форма:";beer;EMPTY;-0,01
"к вот, сценарии использования и альтернативные сценарии, мы обычно получаем от аналитиков из спецификации.. таблицы, деревья и диаграммы мало кто чертит, так как это занимает много времени (при дефиците ресурсов). Как правило, в ходу две популярные техники: классы эквивалентности и граничные значения, и только отдельные умнички используют pairwise ( попарное тестирование ).   Скажу честно, принять эту технику я смог далеко не сразу. Я тогда еще не до конца преисполнился познанием и из-за непонимания было недоверие к, сгенерированным инструментом, кейсам.  Конечно, на собесах, у всех от зубов отскакивает: ""создаются все возможные отдельные комбинации каждой пары входных параметров"" или ""в 97 процентах случаев, баги находятся на комбинации двух параметров"", но давайте разберемся, почему pairwise сложно применить ручками и поймем как забить на это и успешно применять его в своей работе.  Попарное тестирование ручками Представим, что мы тестируем сайт, продающий блокноты. Пользователь может собрать блокнот сам, через форму, после заполнения которой видим изображение собранного блокнота. Форма:";jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;NULL;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
"к вот, сценарии использования и альтернативные сценарии, мы обычно получаем от аналитиков из спецификации.. таблицы, деревья и диаграммы мало кто чертит, так как это занимает много времени (при дефиците ресурсов). Как правило, в ходу две популярные техники: классы эквивалентности и граничные значения, и только отдельные умнички используют pairwise ( попарное тестирование ).   Скажу честно, принять эту технику я смог далеко не сразу. Я тогда еще не до конца преисполнился познанием и из-за непонимания было недоверие к, сгенерированным инструментом, кейсам.  Конечно, на собесах, у всех от зубов отскакивает: ""создаются все возможные отдельные комбинации каждой пары входных параметров"" или ""в 97 процентах случаев, баги находятся на комбинации двух параметров"", но давайте разберемся, почему pairwise сложно применить ручками и поймем как забить на это и успешно применять его в своей работе.  Попарное тестирование ручками Представим, что мы тестируем сайт, продающий блокноты. Пользователь может собрать блокнот сам, через форму, после заполнения которой видим изображение собранного блокнота. Форма:";  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;0
"к вот, сценарии использования и альтернативные сценарии, мы обычно получаем от аналитиков из спецификации.. таблицы, деревья и диаграммы мало кто чертит, так как это занимает много времени (при дефиците ресурсов). Как правило, в ходу две популярные техники: классы эквивалентности и граничные значения, и только отдельные умнички используют pairwise ( попарное тестирование ).   Скажу честно, принять эту технику я смог далеко не сразу. Я тогда еще не до конца преисполнился познанием и из-за непонимания было недоверие к, сгенерированным инструментом, кейсам.  Конечно, на собесах, у всех от зубов отскакивает: ""создаются все возможные отдельные комбинации каждой пары входных параметров"" или ""в 97 процентах случаев, баги находятся на комбинации двух параметров"", но давайте разберемся, почему pairwise сложно применить ручками и поймем как забить на это и успешно применять его в своей работе.  Попарное тестирование ручками Представим, что мы тестируем сайт, продающий блокноты. Пользователь может собрать блокнот сам, через форму, после заполнения которой видим изображение собранного блокнота. Форма:";EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;-0,01
"к вот, сценарии использования и альтернативные сценарии, мы обычно получаем от аналитиков из спецификации.. таблицы, деревья и диаграммы мало кто чертит, так как это занимает много времени (при дефиците ресурсов). Как правило, в ходу две популярные техники: классы эквивалентности и граничные значения, и только отдельные умнички используют pairwise ( попарное тестирование ).   Скажу честно, принять эту технику я смог далеко не сразу. Я тогда еще не до конца преисполнился познанием и из-за непонимания было недоверие к, сгенерированным инструментом, кейсам.  Конечно, на собесах, у всех от зубов отскакивает: ""создаются все возможные отдельные комбинации каждой пары входных параметров"" или ""в 97 процентах случаев, баги находятся на комбинации двух параметров"", но давайте разберемся, почему pairwise сложно применить ручками и поймем как забить на это и успешно применять его в своей работе.  Попарное тестирование ручками Представим, что мы тестируем сайт, продающий блокноты. Пользователь может собрать блокнот сам, через форму, после заполнения которой видим изображение собранного блокнота. Форма:";NULL;   ;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer master;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;-0,01
Beer master;  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer master;EMPTY;   ;0
Beer master;NULL;EMPTY;0
Beer master;beer;NULL;-0,01
Beer  Master;  ;   ;0
Beer  Master;EMPTY;EMPTY;-0,01
Beer  Master;NULL;NULL;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer  Master;beer;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;0
Beer  Master;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;-0,01
Bee1 Master;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;   ;-0,01
Bee1 Master;  ;EMPTY;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Bee1 Master;EMPTY;NULL;0
Bee1 Master;NULL;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;-0,01
Bee1 Master;beer;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Bee1 Master;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;   ;0
Bee1 Master;  ;EMPTY;-0,01
bEer mAster;NULL;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;-0,01
bEer mAster;beer;   ;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
bEer mAster;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;EMPTY;0
bEer mAster;  ;NULL;-0,01
bEer mAster;EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
bEer mAster;NULL;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;0
bEer mAster;beer;   ;-0,01
bEer mAster;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;EMPTY;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
bEer mAster;  ;NULL;0
bEer mAster;EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;0
BEER MASTER;beer;EMPTY;-0,01
BEER MASTER;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;NULL;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
BEER MASTER;  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;0
BEER MASTER;EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;-0,01
BEER MASTER;NULL;   ;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
BEER MASTER;beer;EMPTY;0
BEER MASTER;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;NULL;0
BEER MASTER;  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;-0,01
BEER MASTER;EMPTY;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
BEER MASTER;NULL;   ;0
Beer M}ster;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;-0,01
Beer M}ster;  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer M}ster;EMPTY;   ;0
Beer M}ster;NULL;EMPTY;0
Beer M}ster;beer;NULL;-0,01
Beer M}ster;jjjjjjjjjjjjjjjjj#4аjjjjjjjjjjj;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU21;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer M}ster;  ;{bcrypt}$2a$10$RSvT7b55.bwDLBg4c1Rw/uWygwjfvxFw.MJo/ZlRDnEr1xSwPkJU;0
Beer M}ster;EMPTY;   ;-0,01
Beer M}ster;NULL;EMPTY;9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
Beer M}ster;beer;NULL;0
